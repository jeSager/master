Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              proj1.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              proj1.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

notReadyBool        0x1               proj1.o
DELAY               0x2               proj1.o
sensors             0x34              proj1.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
LOAD proj1.o
LOAD iroblib.o
LOAD timer.o
LOAD cmod.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5e6
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6       0xc8 proj1.o
                0x00000000000000a6                stop
                0x00000000000000c4                printBuffer
                0x0000000000000100                rotateDegreeRight
                0x0000000000000150                driveStraightDistance
 .text          0x000000000000016e       0xf8 iroblib.o
                0x000000000000016e                defineSongs
                0x000000000000020a                powerOnRobot
                0x0000000000000244                powerOffRobot
 .text          0x0000000000000266       0xdc timer.o
                0x0000000000000266                __vector_18
                0x000000000000027a                __vector_14
                0x00000000000002e0                __vector_11
                0x00000000000002fe                setupTimer
                0x000000000000032a                delayMs
 .text          0x0000000000000342      0x134 cmod.o
                0x0000000000000342                setupIOPins
                0x000000000000035a                setupSerialPort
                0x0000000000000374                initializeCommandModule
                0x0000000000000386                byteTx
                0x0000000000000394                byteRx
                0x00000000000003a2                baud
                0x0000000000000456                setSerialDestination
 .text          0x0000000000000476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000476                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000476      0x16c proj1.o
                0x0000000000000476                main
 .text.libgcc.mul
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000005e2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005e2        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000005e2                exit
                0x00000000000005e2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005e2        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005e6                _etext = .

.data           0x0000000000800100        0x8 load address 0x00000000000005e6
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x6 proj1.o
                0x0000000000800100                true
                0x0000000000800102                PI
 .data          0x0000000000800106        0x0 iroblib.o
 .data          0x0000000000800106        0x2 timer.o
                0x0000000000800106                senseTimerCount
 .data          0x0000000000800108        0x0 cmod.o
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800108                . = ALIGN (0x2)
                0x0000000000800108                _edata = .
                0x0000000000800108                PROVIDE (__data_end, .)

.bss            0x0000000000800108       0x41
                0x0000000000800108                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800108        0x5 proj1.o
                0x0000000000800108                isRotating
                0x0000000000800109                unsafeRotate
                0x000000000080010a                safe
                0x000000000080010b                false
 .bss           0x000000000080010d        0x0 iroblib.o
 .bss           0x000000000080010d        0x5 timer.o
                0x000000000080010d                canSense
                0x000000000080010e                canPrint
                0x000000000080010f                delayTimerRunning
                0x0000000000800110                delayTimerCount
 .bss           0x0000000000800112        0x0 cmod.o
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800112       0x37 proj1.o
                0x0000000000800112                notReadyBool
                0x0000000000800113                DELAY
                0x0000000000800115                sensors
                0x0000000000800149                PROVIDE (__bss_end, .)
                0x00000000000005e6                __data_load_start = LOADADDR (.data)
                0x00000000000005ee                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800149        0x0
                0x0000000000800149                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800149                PROVIDE (__noinit_end, .)
                0x0000000000800149                _end = .
                0x0000000000800149                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 proj1.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 iroblib.o
 .comment       0x0000000000000000       0x12 timer.o
 .comment       0x0000000000000000       0x12 cmod.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x88
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 proj1.o
 .debug_aranges
                0x0000000000000028       0x20 iroblib.o
 .debug_aranges
                0x0000000000000048       0x20 timer.o
 .debug_aranges
                0x0000000000000068       0x20 cmod.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xcbe
 *(.debug_info)
 .debug_info    0x0000000000000000      0x61b proj1.o
 .debug_info    0x000000000000061b      0x358 iroblib.o
 .debug_info    0x0000000000000973      0x15a timer.o
 .debug_info    0x0000000000000acd      0x1f1 cmod.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x462
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1f6 proj1.o
 .debug_abbrev  0x00000000000001f6       0xae iroblib.o
 .debug_abbrev  0x00000000000002a4       0xa8 timer.o
 .debug_abbrev  0x000000000000034c      0x116 cmod.o

.debug_line     0x0000000000000000      0x2f8
 *(.debug_line)
 .debug_line    0x0000000000000000      0x12b proj1.o
 .debug_line    0x000000000000012b       0xa9 iroblib.o
 .debug_line    0x00000000000001d4       0x73 timer.o
 .debug_line    0x0000000000000247       0xb1 cmod.o

.debug_frame    0x0000000000000000      0x1f0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x7c proj1.o
 .debug_frame   0x000000000000007c       0x44 iroblib.o
 .debug_frame   0x00000000000000c0       0x9c timer.o
 .debug_frame   0x000000000000015c       0x94 cmod.o

.debug_str      0x0000000000000000      0x327
 *(.debug_str)
 .debug_str     0x0000000000000000      0x241 proj1.o
                                        0x27a (size before relaxing)
 .debug_str     0x0000000000000241       0x2f iroblib.o
                                        0x153 (size before relaxing)
 .debug_str     0x0000000000000270       0x6a timer.o
                                        0x19e (size before relaxing)
 .debug_str     0x00000000000002da       0x4d cmod.o
                                        0x19e (size before relaxing)

.debug_loc      0x0000000000000000      0x2e1
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x15f proj1.o
 .debug_loc     0x000000000000015f       0xdb timer.o
 .debug_loc     0x000000000000023a       0xa7 cmod.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x30
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 proj1.o

.debug_macro
 *(.debug_macro)
OUTPUT(proj1.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
DELAY                                             proj1.o
PI                                                proj1.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  timer.o
                                                  proj1.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  timer.o
                                                  proj1.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_11                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_14                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_18                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
baud                                              cmod.o
                                                  proj1.o
byteRx                                            cmod.o
                                                  proj1.o
byteTx                                            cmod.o
                                                  iroblib.o
                                                  proj1.o
canPrint                                          timer.o
canSense                                          timer.o
                                                  proj1.o
defineSongs                                       iroblib.o
                                                  proj1.o
delayMs                                           timer.o
                                                  cmod.o
                                                  iroblib.o
                                                  proj1.o
delayTimerCount                                   timer.o
delayTimerRunning                                 timer.o
driveStraightDistance                             proj1.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  proj1.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
false                                             proj1.o
initializeCommandModule                           cmod.o
                                                  proj1.o
isRotating                                        proj1.o
main                                              proj1.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
notReadyBool                                      proj1.o
powerOffRobot                                     iroblib.o
                                                  proj1.o
powerOnRobot                                      iroblib.o
                                                  proj1.o
printBuffer                                       proj1.o
rotateDegreeRight                                 proj1.o
safe                                              proj1.o
senseTimerCount                                   timer.o
                                                  proj1.o
sensors                                           proj1.o
setSerialDestination                              cmod.o
setupIOPins                                       cmod.o
setupSerialPort                                   cmod.o
setupTimer                                        timer.o
                                                  cmod.o
stop                                              proj1.o
true                                              proj1.o
unsafeRotate                                      proj1.o
