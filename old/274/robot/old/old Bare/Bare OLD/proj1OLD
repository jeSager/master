#include "timer.h"
#include "cmod.h"
#include "iroblib.h"
#include "oi.h"
#include <stdlib.h>

// Declare Global variables 

  int notReadyBool=1;
//drives you crazy
void ready2Drive(void){
	for(int i=0;i<4;i++){
		byteTx(158);
		byteTx(17);
		notReadyBool=0;
		//drive straight
		byteTx(CmdDrive);
		byteTx(0x01);//velocity 300mm/s
		byteTx(0x2c);
		byteTx(0x7f);//radius
		byteTx(0xff);

		delayMs(2800);

		//turn in place
		byteTx(CmdDrive);
		byteTx(0x01);//velocity 300mm/s
		byteTx(0x2c);
		byteTx(0xff);//radius
		byteTx(0xff);

		delayMs(600);
	}

	powerOffRobot();
}

int main() {
  
  // Set up Create and module
  initializeCommandModule();
    
  powerOnRobot();
    // Is the Robot on
  byteTx(CmdStart);
    // Start the create
  baud(Baud57600);
    // Set the baud rate for the Create and Command Module
  defineSongs();
    // Define some songs so that we know the robot is on.
  byteTx(CmdControl);
    // Deprecated form of safe mode. I use it because it will
    // turn of all LEDs, so it's essentially a reset.
  byteTx(CmdFull);
    // We are operating in FULL mode.

  // CSCE 274 students: I would make sure the robot stops. 
  //                    As a precaution for the robot and your grade.

  // Play the reset song and wait while it plays.
  byteTx(CmdPlay);
  byteTx(RESET_SONG);
  delayMs(750);

  // Turn the power button on to something. I like red, but here is green.
  // CSCE 274 students: The following should (will) be a function that you write.
  byteTx(CmdLeds);
  byteTx(0x00);
  byteTx(0);
  byteTx(255);

  // Initialize global variables



  // Infinite operation loop
  for(;;) {
    // Do cool stuff a.k.a. (Assignment stuff)
	
	if(notReadyBool){
		ready2Drive();
	}
    delayMs(10);
    if(UserButtonPressed) {
      powerOffRobot();
      exit(1);
    }
  }



}

