
make this function in the node file
bool zeroIncoming()

make this function in the graph file
bool acyclic



Set incoming vectors:

vector<int> children
for n in graph
  children=n.getChildSubs();
  for c in children
    c.IncrementIncoming();

--done--

ascylic = testCyclic( graph, false )

bool testCyclic( vector<int> test, bool acyclic){

for n in testgraph{

  if n.noChild && n.hasIncoming

    // remove leaf ref
    for any in testgraph
      for c in any.children
        if n==c
          any.removeChild

     // remove the leaf
     testgraph.pop(n)
     if( testgraph(empty)) acyclic=true;
     else testCyclic(testgraph, acyclic)
}
return acyclic;








stack<Node> stack

for n in graph
  acyclic=n.HasNotBeenVisited();
  if (n.zeroIncoming() && acyclic)
    stack.push(n);
  while( acyclic &&  ! stack.empty() )
    for p in path & ! acyclic
      if( p == stack.top().getnodenumber() )
          acyclic == false
    if( asyclic )





















