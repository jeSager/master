   1               		.file	"iroblib.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	defineSongs
  12               	defineSongs:
  13               	.LFB0:
  14               		.file 1 "iroblib.c"
   1:iroblib.c     **** #include "iroblib.h"
   2:iroblib.c     **** #include "oi.h"
   3:iroblib.c     **** #include "cmod.h"
   4:iroblib.c     **** #include "timer.h"
   5:iroblib.c     **** 
   6:iroblib.c     **** // Define songs to be played later
   7:iroblib.c     **** void defineSongs(void) {
  15               		.loc 1 7 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
   8:iroblib.c     ****   // Reset song
   9:iroblib.c     ****   byteTx(CmdSong);
  21               		.loc 1 9 0
  22 0000 8CE8      		ldi r24,lo8(-116)
  23 0002 0E94 0000 		call byteTx
  24               	.LVL0:
  10:iroblib.c     ****   byteTx(RESET_SONG);
  25               		.loc 1 10 0
  26 0006 80E0      		ldi r24,0
  27 0008 0E94 0000 		call byteTx
  28               	.LVL1:
  11:iroblib.c     ****   byteTx(4);
  29               		.loc 1 11 0
  30 000c 84E0      		ldi r24,lo8(4)
  31 000e 0E94 0000 		call byteTx
  32               	.LVL2:
  12:iroblib.c     ****   byteTx(60);
  33               		.loc 1 12 0
  34 0012 8CE3      		ldi r24,lo8(60)
  35 0014 0E94 0000 		call byteTx
  36               	.LVL3:
  13:iroblib.c     ****   byteTx(6);
  37               		.loc 1 13 0
  38 0018 86E0      		ldi r24,lo8(6)
  39 001a 0E94 0000 		call byteTx
  40               	.LVL4:
  14:iroblib.c     ****   byteTx(72);
  41               		.loc 1 14 0
  42 001e 88E4      		ldi r24,lo8(72)
  43 0020 0E94 0000 		call byteTx
  44               	.LVL5:
  15:iroblib.c     ****   byteTx(6);
  45               		.loc 1 15 0
  46 0024 86E0      		ldi r24,lo8(6)
  47 0026 0E94 0000 		call byteTx
  48               	.LVL6:
  16:iroblib.c     ****   byteTx(84);
  49               		.loc 1 16 0
  50 002a 84E5      		ldi r24,lo8(84)
  51 002c 0E94 0000 		call byteTx
  52               	.LVL7:
  17:iroblib.c     ****   byteTx(6);
  53               		.loc 1 17 0
  54 0030 86E0      		ldi r24,lo8(6)
  55 0032 0E94 0000 		call byteTx
  56               	.LVL8:
  18:iroblib.c     ****   byteTx(96);
  57               		.loc 1 18 0
  58 0036 80E6      		ldi r24,lo8(96)
  59 0038 0E94 0000 		call byteTx
  60               	.LVL9:
  19:iroblib.c     ****   byteTx(6);
  61               		.loc 1 19 0
  62 003c 86E0      		ldi r24,lo8(6)
  63 003e 0E94 0000 		call byteTx
  64               	.LVL10:
  20:iroblib.c     **** 
  21:iroblib.c     ****   // Start song
  22:iroblib.c     ****   byteTx(CmdSong);
  65               		.loc 1 22 0
  66 0042 8CE8      		ldi r24,lo8(-116)
  67 0044 0E94 0000 		call byteTx
  68               	.LVL11:
  23:iroblib.c     ****   byteTx(START_SONG);
  69               		.loc 1 23 0
  70 0048 81E0      		ldi r24,lo8(1)
  71 004a 0E94 0000 		call byteTx
  72               	.LVL12:
  24:iroblib.c     ****   byteTx(6);
  73               		.loc 1 24 0
  74 004e 86E0      		ldi r24,lo8(6)
  75 0050 0E94 0000 		call byteTx
  76               	.LVL13:
  25:iroblib.c     ****   byteTx(69);
  77               		.loc 1 25 0
  78 0054 85E4      		ldi r24,lo8(69)
  79 0056 0E94 0000 		call byteTx
  80               	.LVL14:
  26:iroblib.c     ****   byteTx(18);
  81               		.loc 1 26 0
  82 005a 82E1      		ldi r24,lo8(18)
  83 005c 0E94 0000 		call byteTx
  84               	.LVL15:
  27:iroblib.c     ****   byteTx(72);
  85               		.loc 1 27 0
  86 0060 88E4      		ldi r24,lo8(72)
  87 0062 0E94 0000 		call byteTx
  88               	.LVL16:
  28:iroblib.c     ****   byteTx(12);
  89               		.loc 1 28 0
  90 0066 8CE0      		ldi r24,lo8(12)
  91 0068 0E94 0000 		call byteTx
  92               	.LVL17:
  29:iroblib.c     ****   byteTx(74);
  93               		.loc 1 29 0
  94 006c 8AE4      		ldi r24,lo8(74)
  95 006e 0E94 0000 		call byteTx
  96               	.LVL18:
  30:iroblib.c     ****   byteTx(12);
  97               		.loc 1 30 0
  98 0072 8CE0      		ldi r24,lo8(12)
  99 0074 0E94 0000 		call byteTx
 100               	.LVL19:
  31:iroblib.c     ****   byteTx(72);
 101               		.loc 1 31 0
 102 0078 88E4      		ldi r24,lo8(72)
 103 007a 0E94 0000 		call byteTx
 104               	.LVL20:
  32:iroblib.c     ****   byteTx(12);
 105               		.loc 1 32 0
 106 007e 8CE0      		ldi r24,lo8(12)
 107 0080 0E94 0000 		call byteTx
 108               	.LVL21:
  33:iroblib.c     ****   byteTx(69);
 109               		.loc 1 33 0
 110 0084 85E4      		ldi r24,lo8(69)
 111 0086 0E94 0000 		call byteTx
 112               	.LVL22:
  34:iroblib.c     ****   byteTx(12);
 113               		.loc 1 34 0
 114 008a 8CE0      		ldi r24,lo8(12)
 115 008c 0E94 0000 		call byteTx
 116               	.LVL23:
  35:iroblib.c     ****   byteTx(77);
 117               		.loc 1 35 0
 118 0090 8DE4      		ldi r24,lo8(77)
 119 0092 0E94 0000 		call byteTx
 120               	.LVL24:
  36:iroblib.c     ****   byteTx(24);
 121               		.loc 1 36 0
 122 0096 88E1      		ldi r24,lo8(24)
 123 0098 0C94 0000 		jmp byteTx
 124               	.LVL25:
 125               		.cfi_endproc
 126               	.LFE0:
 128               	.global	powerOnRobot
 130               	powerOnRobot:
 131               	.LFB1:
  37:iroblib.c     **** }
  38:iroblib.c     **** 
  39:iroblib.c     **** // Ensure that the robot is On.
  40:iroblib.c     **** void powerOnRobot(void) {
 132               		.loc 1 40 0
 133               		.cfi_startproc
 134               	/* prologue: function */
 135               	/* frame size = 0 */
 136               	/* stack size = 0 */
 137               	.L__stack_usage = 0
  41:iroblib.c     ****   // If Create's power is off, turn it on
  42:iroblib.c     ****   if(!RobotIsOn) {
 138               		.loc 1 42 0
 139 009c 1D99      		sbic 0x3,5
 140 009e 00C0      		rjmp .L7
 141               	.L4:
  43:iroblib.c     ****     while(!RobotIsOn) {
 142               		.loc 1 43 0 discriminator 1
 143 00a0 1D99      		sbic 0x3,5
 144 00a2 00C0      		rjmp .L12
  44:iroblib.c     ****       RobotPwrToggleLow;
 145               		.loc 1 44 0
 146 00a4 5F98      		cbi 0xb,7
  45:iroblib.c     ****       delayMs(500);  // Delay in this state
 147               		.loc 1 45 0
 148 00a6 84EF      		ldi r24,lo8(-12)
 149 00a8 91E0      		ldi r25,lo8(1)
 150 00aa 0E94 0000 		call delayMs
 151               	.LVL26:
  46:iroblib.c     ****       RobotPwrToggleHigh;  // Low to high transition to toggle power
 152               		.loc 1 46 0
 153 00ae 5F9A      		sbi 0xb,7
  47:iroblib.c     ****       delayMs(100);  // Delay in this state
 154               		.loc 1 47 0
 155 00b0 84E6      		ldi r24,lo8(100)
 156 00b2 90E0      		ldi r25,0
 157 00b4 0E94 0000 		call delayMs
 158               	.LVL27:
  48:iroblib.c     ****       RobotPwrToggleLow;
 159               		.loc 1 48 0
 160 00b8 5F98      		cbi 0xb,7
 161 00ba 00C0      		rjmp .L4
 162               	.L12:
  49:iroblib.c     ****     }
  50:iroblib.c     ****     delayMs(3500);  // Delay for startup
 163               		.loc 1 50 0
 164 00bc 8CEA      		ldi r24,lo8(-84)
 165 00be 9DE0      		ldi r25,lo8(13)
 166 00c0 0E94 0000 		call delayMs
 167               	.LVL28:
 168               	.L7:
  51:iroblib.c     ****   }
  52:iroblib.c     **** 
  53:iroblib.c     ****   // Flush the buffer
  54:iroblib.c     ****   while( (UCSR0A & 0x80) && UDR0);
 169               		.loc 1 54 0 discriminator 1
 170 00c4 8091 C000 		lds r24,192
 171 00c8 87FF      		sbrs r24,7
 172 00ca 00C0      		rjmp .L2
 173               		.loc 1 54 0 is_stmt 0 discriminator 2
 174 00cc 8091 C600 		lds r24,198
 175 00d0 8111      		cpse r24,__zero_reg__
 176 00d2 00C0      		rjmp .L7
 177               	.L2:
 178 00d4 0895      		ret
 179               		.cfi_endproc
 180               	.LFE1:
 182               	.global	powerOffRobot
 184               	powerOffRobot:
 185               	.LFB2:
  55:iroblib.c     **** }
  56:iroblib.c     **** 
  57:iroblib.c     **** // Ensure that the robot is OFF.
  58:iroblib.c     **** void powerOffRobot(void) {
 186               		.loc 1 58 0 is_stmt 1
 187               		.cfi_startproc
 188               	/* prologue: function */
 189               	/* frame size = 0 */
 190               	/* stack size = 0 */
 191               	.L__stack_usage = 0
  59:iroblib.c     ****   // If Create's power is on, turn it off
  60:iroblib.c     ****   if(RobotIsOn) {
 192               		.loc 1 60 0
 193 00d6 1D9B      		sbis 0x3,5
 194 00d8 0895      		ret
 195               	.L18:
  61:iroblib.c     ****     while(RobotIsOn) {
 196               		.loc 1 61 0 discriminator 1
 197 00da 1D9B      		sbis 0x3,5
 198 00dc 00C0      		rjmp .L19
  62:iroblib.c     ****       RobotPwrToggleLow;
 199               		.loc 1 62 0
 200 00de 5F98      		cbi 0xb,7
  63:iroblib.c     ****       delayMs(500);  // Delay in this state
 201               		.loc 1 63 0
 202 00e0 84EF      		ldi r24,lo8(-12)
 203 00e2 91E0      		ldi r25,lo8(1)
 204 00e4 0E94 0000 		call delayMs
 205               	.LVL29:
  64:iroblib.c     ****       RobotPwrToggleHigh;  // Low to high transition to toggle power
 206               		.loc 1 64 0
 207 00e8 5F9A      		sbi 0xb,7
  65:iroblib.c     ****       delayMs(100);  // Delay in this state
 208               		.loc 1 65 0
 209 00ea 84E6      		ldi r24,lo8(100)
 210 00ec 90E0      		ldi r25,0
 211 00ee 0E94 0000 		call delayMs
 212               	.LVL30:
  66:iroblib.c     ****       RobotPwrToggleLow;
 213               		.loc 1 66 0
 214 00f2 5F98      		cbi 0xb,7
 215 00f4 00C0      		rjmp .L18
 216               	.L19:
 217 00f6 0895      		ret
 218               		.cfi_endproc
 219               	.LFE2:
 221               	.Letext0:
 222               		.file 2 "/usr/lib/avr/include/stdint.h"
 223               		.file 3 "cmod.h"
 224               		.file 4 "timer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 iroblib.c
     /tmp/ccOq3Uw5.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccOq3Uw5.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccOq3Uw5.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccOq3Uw5.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccOq3Uw5.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccOq3Uw5.s:12     .text:0000000000000000 defineSongs
     /tmp/ccOq3Uw5.s:130    .text:000000000000009c powerOnRobot
     /tmp/ccOq3Uw5.s:184    .text:00000000000000d6 powerOffRobot

UNDEFINED SYMBOLS
byteTx
delayMs
