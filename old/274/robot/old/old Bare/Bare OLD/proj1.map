Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              proj1.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

notReadyBool        0x1               proj1.o
DELAY               0x2               proj1.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
LOAD proj1.o
LOAD iroblib.o
LOAD timer.o
LOAD cmod.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x4a0
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000084        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000000000008c        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x000000000000008c                __vector_22
                0x000000000000008c                __vector_1
                0x000000000000008c                __vector_24
                0x000000000000008c                __vector_12
                0x000000000000008c                __bad_interrupt
                0x000000000000008c                __vector_6
                0x000000000000008c                __vector_3
                0x000000000000008c                __vector_23
                0x000000000000008c                __vector_25
                0x000000000000008c                __vector_13
                0x000000000000008c                __vector_17
                0x000000000000008c                __vector_19
                0x000000000000008c                __vector_7
                0x000000000000008c                __vector_5
                0x000000000000008c                __vector_4
                0x000000000000008c                __vector_9
                0x000000000000008c                __vector_2
                0x000000000000008c                __vector_21
                0x000000000000008c                __vector_15
                0x000000000000008c                __vector_8
                0x000000000000008c                __vector_14
                0x000000000000008c                __vector_10
                0x000000000000008c                __vector_16
                0x000000000000008c                __vector_20
 .text          0x0000000000000090        0x0 proj1.o
 .text          0x0000000000000090       0xf8 iroblib.o
                0x0000000000000090                defineSongs
                0x000000000000012c                powerOnRobot
                0x0000000000000166                powerOffRobot
 .text          0x0000000000000188       0x8a timer.o
                0x0000000000000188                __vector_18
                0x000000000000019c                __vector_11
                0x00000000000001dc                setupTimer
                0x00000000000001fa                delayMs
 .text          0x0000000000000212      0x114 cmod.o
                0x0000000000000212                setupIOPins
                0x000000000000022a                setupSerialPort
                0x0000000000000244                initializeCommandModule
                0x0000000000000256                byteTx
                0x0000000000000264                byteRx
                0x0000000000000272                baud
 .text          0x0000000000000326        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000326        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000326                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000326      0x176 proj1.o
                0x0000000000000326                main
 .text.libgcc.mul
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000049c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000049c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x000000000000049c                exit
                0x000000000000049c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000049c        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000004a0                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000004a0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 proj1.o
 .data          0x0000000000800100        0x0 iroblib.o
 .data          0x0000000000800100        0x0 timer.o
 .data          0x0000000000800100        0x0 cmod.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x6
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800100        0x0 proj1.o
 .bss           0x0000000000800100        0x0 iroblib.o
 .bss           0x0000000000800100        0x3 timer.o
                0x0000000000800100                delayTimerRunning
                0x0000000000800101                delayTimerCount
 .bss           0x0000000000800103        0x0 cmod.o
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800103        0x3 proj1.o
                0x0000000000800103                notReadyBool
                0x0000000000800104                DELAY
                0x0000000000800106                PROVIDE (__bss_end, .)
                0x00000000000004a0                __data_load_start = LOADADDR (.data)
                0x00000000000004a0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800106        0x0
                0x0000000000800106                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800106                PROVIDE (__noinit_end, .)
                0x0000000000800106                _end = .
                0x0000000000800106                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 proj1.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 iroblib.o
 .comment       0x0000000000000000       0x12 timer.o
 .comment       0x0000000000000000       0x12 cmod.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 proj1.o
 .debug_aranges
                0x0000000000000020       0x20 iroblib.o
 .debug_aranges
                0x0000000000000040       0x20 timer.o
 .debug_aranges
                0x0000000000000060       0x20 cmod.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xbe0
 *(.debug_info)
 .debug_info    0x0000000000000000      0x595 proj1.o
 .debug_info    0x0000000000000595      0x3a3 iroblib.o
 .debug_info    0x0000000000000938      0x10e timer.o
 .debug_info    0x0000000000000a46      0x19a cmod.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x405
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x16d proj1.o
 .debug_abbrev  0x000000000000016d       0xda iroblib.o
 .debug_abbrev  0x0000000000000247       0xa8 timer.o
 .debug_abbrev  0x00000000000002ef      0x116 cmod.o

.debug_line     0x0000000000000000      0x29d
 *(.debug_line)
 .debug_line    0x0000000000000000       0xef proj1.o
 .debug_line    0x00000000000000ef       0x9e iroblib.o
 .debug_line    0x000000000000018d       0x67 timer.o
 .debug_line    0x00000000000001f4       0xa9 cmod.o

.debug_frame    0x0000000000000000      0x15c
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x24 proj1.o
 .debug_frame   0x0000000000000024       0x44 iroblib.o
 .debug_frame   0x0000000000000068       0x78 timer.o
 .debug_frame   0x00000000000000e0       0x7c cmod.o

.debug_str      0x0000000000000000      0x23f
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1ad proj1.o
                                        0x1e1 (size before relaxing)
 .debug_str     0x00000000000001ad        0xa iroblib.o
                                        0x13e (size before relaxing)
 .debug_str     0x00000000000001b7       0x55 timer.o
                                        0x164 (size before relaxing)
 .debug_str     0x000000000000020c       0x33 cmod.o
                                        0x178 (size before relaxing)

.debug_loc      0x0000000000000000      0x194
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x9c proj1.o
 .debug_loc     0x000000000000009c       0x9f timer.o
 .debug_loc     0x000000000000013b       0x59 cmod.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x10
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x10 proj1.o

.debug_macro
 *(.debug_macro)
OUTPUT(proj1.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
DELAY                                             proj1.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  timer.o
                                                  proj1.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_11                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_18                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
baud                                              cmod.o
                                                  proj1.o
byteRx                                            cmod.o
                                                  proj1.o
byteTx                                            cmod.o
                                                  iroblib.o
                                                  proj1.o
defineSongs                                       iroblib.o
                                                  proj1.o
delayMs                                           timer.o
                                                  cmod.o
                                                  iroblib.o
                                                  proj1.o
delayTimerCount                                   timer.o
delayTimerRunning                                 timer.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  proj1.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
initializeCommandModule                           cmod.o
                                                  proj1.o
main                                              proj1.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
notReadyBool                                      proj1.o
powerOffRobot                                     iroblib.o
                                                  proj1.o
powerOnRobot                                      iroblib.o
                                                  proj1.o
setupIOPins                                       cmod.o
setupSerialPort                                   cmod.o
setupTimer                                        timer.o
                                                  cmod.o
