1.  Consider:
always @(posedge clk) begin
  if (rst) val <= 8â€™b0; else
  if (load) val <= seed; else
  val <=
  {val[5] ^ val[2],val[7:1]};
end
endmodule

1.a)  list signals:  rst, val, load, clk, seed

1.b)  reg is the only legal type on the left hand side of an always block.
      reg is not used on the left hand side of an assign statement.
      reg can be used to create registers
      they can be connected to an input, but not an output.

1.c)
cycle
0
1
3
4
5
6



2)    Logic Array, Memory Blocks, Multipliers, i/o, phase-locked loops

3.)  Write module:

module aModule (input [3:0] in_val, input [1:0] shampt, output [3:0] out_val);
  assign out_val = (inval << shamt);
end module
