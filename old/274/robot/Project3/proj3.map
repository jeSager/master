Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                              proj3.o (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
                              proj3.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              proj3.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              proj3.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

D                   0x1               proj3.o
newSpeed            0x2               proj3.o
leftSpeed           0x2               proj3.o
sum                 0x2               proj3.o
state               0x2               proj3.o
green               0x1               proj3.o
red                 0x1               proj3.o
redgreenforce       0x1               proj3.o
avgState            0x2               proj3.o
highBitLeft         0x1               proj3.o
lowBit              0x1               proj3.o
redforce            0x1               proj3.o
anyforce            0x1               proj3.o
located             0x1               proj3.o
redgreen            0x1               proj3.o
wheelSpeed          0x2               proj3.o
goodIR              0x1               proj3.o
s                   0xa               proj3.o
greenforce          0x1               proj3.o
I                   0x1               proj3.o
lowBitLeft          0x1               proj3.o
U                   0x1               proj3.o
stateSum            0x2               proj3.o
e                   0xa               proj3.o
highBit             0x1               proj3.o
sensors             0x34              proj3.o
P                   0x1               proj3.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
LOAD proj3.o
LOAD iroblib.o
LOAD timer.o
LOAD cmod.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x9c0
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x50c proj3.o
                0x00000000000000a6                stop
                0x00000000000000c4                rotate
                0x0000000000000126                driveStraightHome
                0x0000000000000144                home
                0x0000000000000162                faceHome
                0x000000000000019e                findWall
                0x00000000000001b2                driveStraight
                0x0000000000000214                followWall
                0x0000000000000278                reverse
                0x00000000000002a2                driveStraightDistanceCm
                0x00000000000002ee                updateSensors
                0x0000000000000522                dock
 .text          0x00000000000005b2       0xf8 iroblib.o
                0x00000000000005b2                defineSongs
                0x000000000000064e                powerOnRobot
                0x0000000000000688                powerOffRobot
 .text          0x00000000000006aa       0xdc timer.o
                0x00000000000006aa                __vector_18
                0x00000000000006be                __vector_14
                0x0000000000000724                __vector_11
                0x0000000000000742                setupTimer
                0x000000000000076e                delayMs
 .text          0x0000000000000786      0x134 cmod.o
                0x0000000000000786                setupIOPins
                0x000000000000079e                setupSerialPort
                0x00000000000007b8                initializeCommandModule
                0x00000000000007ca                byteTx
                0x00000000000007d8                byteRx
                0x00000000000007e6                baud
                0x000000000000089a                setSerialDestination
 .text          0x00000000000008ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000000008ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x00000000000008ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x00000000000008ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000008ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000008ba                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000008ba       0xb2 proj3.o
                0x00000000000008ba                main
 .text.libgcc.mul
                0x000000000000096c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000000000000096c       0x28 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                0x000000000000096c                __udivmodhi4
 .text.libgcc   0x0000000000000994        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000994        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000994        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000994        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000994        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000994        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000994       0x28 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000000994                __divmodhi4
                0x0000000000000994                _div
 .text.libgcc   0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000009bc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000009bc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000009bc                exit
                0x00000000000009bc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000009bc        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000009c0                _etext = .

.data           0x0000000000800100        0xc load address 0x00000000000009c0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x9 proj3.o
                0x0000000000800100                first
                0x0000000000800101                firstStraight
                0x0000000000800102                T
                0x0000000000800103                PROPORTIONAL4U
                0x0000000000800104                DGain
                0x0000000000800105                IGain
                0x0000000000800106                PGain
                0x0000000000800107                SETPOINT
                0x0000000000800108                right
 .data          0x0000000000800109        0x0 iroblib.o
 .data          0x0000000000800109        0x2 timer.o
                0x0000000000800109                senseTimerCount
 .data          0x000000000080010b        0x0 cmod.o
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080010c                . = ALIGN (0x2)
 *fill*         0x000000000080010b        0x1 
                0x000000000080010c                _edata = .
                0x000000000080010c                PROVIDE (__data_end, .)

.bss            0x000000000080010c       0x72
                0x000000000080010c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .bss           0x000000000080010c        0x6 proj3.o
                0x000000000080010c                hasTurned
                0x000000000080010d                slowTheFuckDown
                0x000000000080010e                populateArray
                0x000000000080010f                startIR
                0x0000000000800110                robotState
                0x0000000000800111                left
 .bss           0x0000000000800112        0x0 iroblib.o
 .bss           0x0000000000800112        0x5 timer.o
                0x0000000000800112                canSense
                0x0000000000800113                canPrint
                0x0000000000800114                delayTimerRunning
                0x0000000000800115                delayTimerCount
 .bss           0x0000000000800117        0x0 cmod.o
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800117       0x67 proj3.o
                0x0000000000800117                D
                0x0000000000800118                newSpeed
                0x000000000080011a                leftSpeed
                0x000000000080011c                sum
                0x000000000080011e                state
                0x0000000000800120                green
                0x0000000000800121                red
                0x0000000000800122                redgreenforce
                0x0000000000800123                avgState
                0x0000000000800125                highBitLeft
                0x0000000000800126                lowBit
                0x0000000000800127                redforce
                0x0000000000800128                anyforce
                0x0000000000800129                located
                0x000000000080012a                redgreen
                0x000000000080012b                wheelSpeed
                0x000000000080012d                goodIR
                0x000000000080012e                s
                0x0000000000800138                greenforce
                0x0000000000800139                I
                0x000000000080013a                lowBitLeft
                0x000000000080013b                U
                0x000000000080013c                stateSum
                0x000000000080013e                e
                0x0000000000800148                highBit
                0x0000000000800149                sensors
                0x000000000080017d                P
                0x000000000080017e                PROVIDE (__bss_end, .)
                0x00000000000009c0                __data_load_start = LOADADDR (.data)
                0x00000000000009cc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080017e        0x0
                0x000000000080017e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080017e                PROVIDE (__noinit_end, .)
                0x000000000080017e                _end = .
                0x000000000080017e                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 proj3.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 iroblib.o
 .comment       0x0000000000000000       0x12 timer.o
 .comment       0x0000000000000000       0x12 cmod.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x88
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 proj3.o
 .debug_aranges
                0x0000000000000028       0x20 iroblib.o
 .debug_aranges
                0x0000000000000048       0x20 timer.o
 .debug_aranges
                0x0000000000000068       0x20 cmod.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x142a
 *(.debug_info)
 .debug_info    0x0000000000000000      0xd87 proj3.o
 .debug_info    0x0000000000000d87      0x358 iroblib.o
 .debug_info    0x00000000000010df      0x15a timer.o
 .debug_info    0x0000000000001239      0x1f1 cmod.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x50a
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x29e proj3.o
 .debug_abbrev  0x000000000000029e       0xae iroblib.o
 .debug_abbrev  0x000000000000034c       0xa8 timer.o
 .debug_abbrev  0x00000000000003f4      0x116 cmod.o

.debug_line     0x0000000000000000      0x359
 *(.debug_line)
 .debug_line    0x0000000000000000      0x18c proj3.o
 .debug_line    0x000000000000018c       0xa9 iroblib.o
 .debug_line    0x0000000000000235       0x73 timer.o
 .debug_line    0x00000000000002a8       0xb1 cmod.o

.debug_frame    0x0000000000000000      0x2b0
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x13c proj3.o
 .debug_frame   0x000000000000013c       0x44 iroblib.o
 .debug_frame   0x0000000000000180       0x9c timer.o
 .debug_frame   0x000000000000021c       0x94 cmod.o

.debug_str      0x0000000000000000      0x3f0
 *(.debug_str)
 .debug_str     0x0000000000000000      0x32f proj3.o
                                        0x380 (size before relaxing)
 .debug_str     0x000000000000032f        0xa iroblib.o
                                        0x14b (size before relaxing)
 .debug_str     0x0000000000000339       0x6a timer.o
                                        0x196 (size before relaxing)
 .debug_str     0x00000000000003a3       0x4d cmod.o
                                        0x196 (size before relaxing)

.debug_loc      0x0000000000000000      0x46f
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x2ed proj3.o
 .debug_loc     0x00000000000002ed       0xdb timer.o
 .debug_loc     0x00000000000003c8       0xa7 cmod.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x30
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 proj3.o

.debug_macro
 *(.debug_macro)
OUTPUT(proj3.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
D                                                 proj3.o
DGain                                             proj3.o
I                                                 proj3.o
IGain                                             proj3.o
P                                                 proj3.o
PGain                                             proj3.o
PROPORTIONAL4U                                    proj3.o
SETPOINT                                          proj3.o
T                                                 proj3.o
U                                                 proj3.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
                                                  proj3.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  timer.o
                                                  proj3.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  timer.o
                                                  proj3.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
                                                  proj3.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_11                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_14                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_18                                       timer.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
_div                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
anyforce                                          proj3.o
avgState                                          proj3.o
baud                                              cmod.o
                                                  proj3.o
byteRx                                            cmod.o
                                                  proj3.o
byteTx                                            cmod.o
                                                  iroblib.o
                                                  proj3.o
canPrint                                          timer.o
canSense                                          timer.o
                                                  proj3.o
defineSongs                                       iroblib.o
                                                  proj3.o
delayMs                                           timer.o
                                                  cmod.o
                                                  iroblib.o
                                                  proj3.o
delayTimerCount                                   timer.o
delayTimerRunning                                 timer.o
dock                                              proj3.o
driveStraight                                     proj3.o
driveStraightDistanceCm                           proj3.o
driveStraightHome                                 proj3.o
e                                                 proj3.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  proj3.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
faceHome                                          proj3.o
findWall                                          proj3.o
first                                             proj3.o
firstStraight                                     proj3.o
followWall                                        proj3.o
goodIR                                            proj3.o
green                                             proj3.o
greenforce                                        proj3.o
hasTurned                                         proj3.o
highBit                                           proj3.o
highBitLeft                                       proj3.o
home                                              proj3.o
initializeCommandModule                           cmod.o
                                                  proj3.o
left                                              proj3.o
leftSpeed                                         proj3.o
located                                           proj3.o
lowBit                                            proj3.o
lowBitLeft                                        proj3.o
main                                              proj3.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
newSpeed                                          proj3.o
populateArray                                     proj3.o
powerOffRobot                                     iroblib.o
                                                  proj3.o
powerOnRobot                                      iroblib.o
                                                  proj3.o
red                                               proj3.o
redforce                                          proj3.o
redgreen                                          proj3.o
redgreenforce                                     proj3.o
reverse                                           proj3.o
right                                             proj3.o
robotState                                        proj3.o
rotate                                            proj3.o
s                                                 proj3.o
senseTimerCount                                   timer.o
                                                  proj3.o
sensors                                           proj3.o
setSerialDestination                              cmod.o
setupIOPins                                       cmod.o
setupSerialPort                                   cmod.o
setupTimer                                        timer.o
                                                  cmod.o
slowTheFuckDown                                   proj3.o
startIR                                           proj3.o
state                                             proj3.o
stateSum                                          proj3.o
stop                                              proj3.o
sum                                               proj3.o
updateSensors                                     proj3.o
wheelSpeed                                        proj3.o
