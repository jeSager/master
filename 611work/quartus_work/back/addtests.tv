
//a_b_shamt(zero-padded to 8 bits)_
//op_hi_lo_zero(padded to 4 bits)

// bitwise AND
0F0F0F0F_FFFFFFFF_00_0_00000000_0F0F0F0F_0
0F0F0F0F_F0F0F0F0_00_0_00000000_00000000_1
FFFFFFFF_FFFFFFFF_00_0_00000000_FFFFFFFF_0

//bitwise OR
0F0F0F0F_F0F0F0F0_00_1_00000000_FFFFFFFF_0
0F0F0F0F_00000000_00_1_00000000_0F0F0F0F_0
00000000_00000000_00_1_00000000_00000000_1


//bitwise xOR
00000000_FFFFFFFF_00_3_00000000_FFFFFFFF_0
00000000_FFFFFFFF_00_3_00000000_FFFFFFFF_0
00000000_00000000_00_3_00000000_00000000_1


//bitwise nOR
00000000_00000000_00_2_00000000_FFFFFFFF_0
FFFFFFFF_FFFFFFFF_00_2_00000000_FFFFFFFF_0
00000000_FFFFFFFF_00_2_00000000_00000000_1

//shift left logical
00000000_0000000F_01_8_00000000_0000001E_0
00000000_0000000F_00_8_00000000_0000000F_0


//shift right logical
00000000_0000000F_01_9_00000000_00000007_0
00000000_0000000F_00_9_00000000_0000000F_0

//shift right arithmetic
00000000_0000000F_01_A_00000000_00000007_0
00000000_8000000F_01_A_00000000_80000007_0

//set less than
00000000_0000000F_00_C_00000000_00000001_0
// a=b
0000000F_0000000F_00_C_00000000_00000000_1
// a>b
0000000F_00000000_00_C_00000000_00000000_1
//a<b (negative)
800000F0_8000000F_00_C_00000000_00000001_0
//a>b (negative)
0000000F_800000F0_00_C_00000000_00000000_1
//  -a<b
8000000F_0000000F_00_C_00000000_00000001_0
// a>-b
0000000F_8000000F_00_C_00000000_00000001_0




//set on less than unsigned
//a=b
0000000F_0000000F_00_D_00000000_00000000_1
//a<b
00000000_00000000_00_D_00000000_00000000_1
//a<b
00000000_00000001_00_D_00000000_00000001_0
//a>b
00000000_00000000_00_D_00000000_00000000_0
//a>b
00000001_00000000_00_D_00000000_00000001_0



//add
00000001_00000001_00_4_00000000_00000002_0
00000000_00000000_00_4_00000000_00000000_1
00000001_80000002_00_4_00000000_80000001_0
80000000_FFFFFFFF_00_4_00000000_7FFFFFFF_0
00000001_00000001_00_4_00000000_00000002_0


//subtract
00000002_00000001_00_4_00000000_00000001_0
00000000_00000000_00_4_00000000_00000000_1
00000000_00000001_00_4_00000000_80000001_0
7FFFFFFF
00000001_00000001_00_4_00000000_80000001_0


//multiply




//multiply unsigned





